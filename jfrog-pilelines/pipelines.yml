resources:
  - name: myGitRepo
    type: GitRepo
    configuration:
      gitProvider: alex_github
      path: alexwang66/eplus-training
      branches:
        include: main
  - name: DockerAppImage
    type: Image
    configuration:
      registry: artifactory
      sourceRepository: docker
      imageName: demo.jfrogchina.com/docker-local/docker-app 
      imageTag: '${run_number}'
      autoPull: true
  - name: myBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildName: SampleApp
      buildNumber: 1
  - name: myPromotedBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildName: SampleApp
      buildNumber: 1
  - name: myHelmBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildName: SampleApp
      buildNumber: 1
  - name: myPromotedHelmBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildName: SampleApp
      buildNumber: 1
  - name: MyHelmChart
    type: HelmChart
    configuration:
      sourceArtifactory: artifactory
      repository: helm-local
      chart: docker-app-chart
      version: '0.1.${run_number}'
  - name: MyPromotedHelmChart
    type: HelmChart
    configuration:
      sourceArtifactory: artifactory
      repository: helm-prod-local
      chart: docker-app-chart
      version: '0.1.${run_number}'
  - name: myReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution
      name: swampup_rb
      version: v1.0.0
  - name: mySignedReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution
      name: swampup_rb
      version: v1.0.0
  - name: myDistributionRules
    type: DistributionRule
    configuration:
      sourceDistribution: distribution
      serviceName: "Edge*"
      siteName: "Edge*"
      cityName: "*"
      countryCodes:
        - "*"
pipelines:
  - name: swampup_docker_app_pipeline
    configuration:
      environmentVariables:
        readOnly:
           my_env_var: '1.0.$run_number'
           ArtIP: $(echo ${int_artifactory_url}|awk -F '/' '{print $3}')
    steps:
#       - name: bld_backend
#         type: MvnBuild
#         configuration:
#           sourceLocation: alexwang66/eplus-training/jfrog-pilelines/java-backend-service
#           mvnCommand: clean install -ntp
#           configFileLocation: .
#           configFileName: mvn-art-config
#           inputResources:
#             - name: myGitRepo
#               trigger: false
#           integrations:
#             - name: artifactory
#           runtime:
#             type: image
#             image:
#               auto:
#                 language: java
#                 versions:
#                   - "11"
#         execution:
#           onStart:
#             - javac -version
#             - mvn package
#           onComplete:
#             - echo $run_var
#             - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
      - name: bld_frontend
        type: NpmBuild
        configuration:
          npmArgs: --no-progress --no-audit
          sourceLocation: jfrog-pilelines/npm-frontend-service
          repositoryName: alex-npm
          inputResources:
            - name: myGitRepo
              trigger: false
          integrations:
            - name: artifactory
#         execution:
#           onStart:
#             - npm install
#             - npm run build     
      - name: publish_frontend
        type: NpmPublish
        configuration:
          repositoryName: alex-npm
          inputSteps:
            - name: bld_frontend
          integrations:
            - name: artifactory
#       - name: bld_docker_app
#         type: DockerBuild
#         configuration:
#           affinityGroup: fmkGroup
#           dockerFileLocation: alexwang66/eplus-training/jfrog-pilelines/
#           dockerFileName: Dockerfile
#           dockerImageName: demo.jfrogchina.com/docker/swampup_docker_app_demo
#           dockerImageTag: '${run_number}'
#           integrations:
#             - name: artifactory
#           inputResources:
#             - name: myGitRepo
#               trigger: false
#           outputResources:
#             - name: DockerAppImage
#           inputSteps:
#             - name: bld_backend
#             - name: publish_frontend #bld_frontend
#         execution:
#           onStart:
#             - add_run_variables url=demo.jfrogchina.com/docker
#             - add_run_variables old=docker.artifactory
#             - echo $url
#             - sed -i "s|$old|$url|g" $res_myGitRepo_resourcePath/alexwang66/eplus-training/jfrog-pilelines/Dockerfile
#             - sed -i "s/artifactory-unified.soleng-us.jfrog.team/demo.jfrogchina.com/" $res_myGitRepo_resourcePath/alexwang66/eplus-training/jfrog-pilelines/Dockerfile
#             - sed -i "s/frontend-3.0.0/frontend-$previous_frontend_ver/g" $res_myGitRepo_resourcePath/alexwang66/eplus-training/jfrog-pilelines/Dockerfile
#             - sed -i "s/1.0.0/$previous_backend_ver/g" $res_myGitRepo_resourcePath/alexwang66/eplus-training/jfrog-pilelines/Dockerfile
#             - cat $res_myGitRepo_resourcePath/alexwang66/eplus-training/jfrog-pilelines/Dockerfile
#           onComplete:
#             - echo $step_env_var2
#             - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
#       - name: push_docker_app
#         type: DockerPush
#         configuration:
#           affinityGroup: fmkGroup
#           targetRepository: docker
#           forceXrayScan: true
#           autoPublishBuildInfo: true
#           integrations:
#             - name: artifactory
#           inputSteps:
#             - name: bld_docker_app
#           outputResources:
#             - name: myBuildInfo
